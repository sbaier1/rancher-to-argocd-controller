---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: rancher-to-argocd-controller
  namespace: argocd
---
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: rancher-to-argocd-controller
rules:
  - apiGroups:
      - management.cattle.io
    resources:
      - "clusters"
      - "users"
      - "tokens"
    verbs:
      - "get"
      - "watch"
      - "list"
  # If you want to use the fleet hook
  - apiGroups:
      - fleet.cattle.io
    resources:
      - "clusters"
    verbs:
      - "get"
      - "watch"
      - "list"
  # For retrieving the kubeconf secret, typically in fleet-default namespace
  - apiGroups:
      - ""
    resources:
      - "secrets"
    verbs:
      - "get"
# if you want it to automatically fetch secret data from another namespace
# ie: rancher tls ca
#  - apiGroups:
#      - ""
#    resources:
#      - "secrets"
#    verbs:
#      - "get"
---
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: rancher-to-argocd-controller
  namespace: argocd
roleRef:
  kind: ClusterRole
  apiGroup: rbac.authorization.k8s.io
  name: rancher-to-argocd-controller
subjects:
  - kind: ServiceAccount
    name: rancher-to-argocd-controller
    namespace: argocd
---
kind: Role
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: rancher-to-argocd-controller
  namespace: argocd
rules:
  - apiGroups:
      - ""
    resources:
      - "secrets"
    verbs:
      - "get"
      - "watch"
      - "list"
      - "create"
      - "update"
      - "patch"
      - "delete"
---
kind: RoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: rancher-to-argocd-controller
  namespace: argocd
roleRef:
  kind: Role
  apiGroup: rbac.authorization.k8s.io
  name: rancher-to-argocd-controller
subjects:
  - kind: ServiceAccount
    name: rancher-to-argocd-controller
    namespace: argocd
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: rancher-to-argocd-controller
  namespace: argocd
  labels:
    app: rancher-to-argocd-controller
spec:
  replicas: 1
  selector:
    matchLabels:
      app: rancher-to-argocd-controller
  template:
    metadata:
      labels:
        app: rancher-to-argocd-controller
    spec:
      serviceAccountName: rancher-to-argocd-controller
      containers:
        - name: rancher-to-argocd-controller
          image: travisghansen/rancher-to-argocd-controller:latest
          env:
            - name: ENVIRONMENT_ID
              value: "dev"
            - name: RANCHER_URI
              value: "https://rancher.example.com"
            # derive argocd clusters from rancher clusters using the bootstrap admin token
            - name: ENABLE_HOOK_RANCHER_CLUSTERS_TO_ARGOCD_CLUSTERS
              value: "false"
            # derive argocd clusters from cluster.fleet.cattle.io instead of using the admin token. 
            # this mode will also apply the labels from the original fleet cluster object to ArgoCD clusters.
            - name: FLEET_MODE
              value: "false"